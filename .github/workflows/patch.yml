name: Patch Kodi

on:
  workflow_dispatch:
    inputs:
      repository:
        description: Upstream repository
        required: true
        default: xbmc/xbmc
      ref:
        description: Upstream reference (e.g., branch name)
        required: true
        default: master
      patch:
        description: Patch to apply to upstream
        required: false
        default: dv_hdr10plus.patch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Kodi
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          path: xbmc
      - name: Checkout Patches
        uses: actions/checkout@v4
        if: github.event.inputs.patch != ''
        with:
          path: patches
      - name: Apply Patch
        if: github.event.inputs.patch != ''
        run:
          cd xbmc &&
          git apply --verbose ../patches/patches/${{ github.event.inputs.patch }}
      - name: Configure Debug Keystore
        env:
          ANDROID_DEBUG_KEYSTORE: ${{ secrets.ANDROID_DEBUG_KEYSTORE }}
        run:
          mkdir -p "$HOME/.android" &&
          base64 -d <<< "$ANDROID_DEBUG_KEYSTORE" > "$HOME/.android/debug.keystore"
      - name: Clean-up Disk Space
        run:
          sudo rm -rf /usr/share/dotnet &&
          sudo rm -rf /usr/local/lib/android/* &&
          sudo rm -rf /opt/ghc &&
          sudo rm -rf /opt/hostedtoolcache/CodeQL &&
          sudo docker image prune --all --force
      - name: Install Dependencies
        run:
          sudo mkdir -p /usr/local/lib/android &&
          sudo chown -R $USER:$USER /usr/local/lib/android &&
          sudo apt install -y
            autoconf
            bison
            build-essential
            curl
            flex
            gawk
            git
            gperf
            lib32stdc++6
            lib32z1
            lib32z1-dev
            libcurl4-openssl-dev
            unzip
            zip
            zlib1g-dev
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Configure Android SDK
        run:
          sdkmanager "platform-tools" &&
          sdkmanager "platforms;android-34" &&
          sdkmanager "build-tools;33.0.1" &&
          sdkmanager "ndk;26.2.11394342"
      - name: Remaining Space
        run: df -h
      - name: Build tools and dependencies
        run:
          cd xbmc/tools/depends &&
          ./bootstrap &&
          ./configure
            --with-tarballs="$ANDROID_SDK_ROOT/xbmc-tarballs"
            --host=arm-linux-androideabi
            --with-sdk-path="$ANDROID_SDK_ROOT"
            --with-ndk-path="$ANDROID_SDK_ROOT/ndk/21.4.7075529"
            --prefix="$ANDROID_SDK_ROOT/xbmc-depends" &&
          make -j$(getconf _NPROCESSORS_ONLN)
      - name: Build add-ons
        run:
          cd xbmc &&
          make -j$(getconf _NPROCESSORS_ONLN) -C tools/depends/target/binary-addons
      - name: Build Kodi
        run:
          cd xbmc &&
          make -C tools/depends/target/cmakebuildsys &&
          mkdir "$GITHUB_WORKSPACE/kodi-build" &&
          make -C tools/depends/target/cmakebuildsys BUILD_DIR="$GITHUB_WORKSPACE/kodi-build" &&
          cd "$GITHUB_WORKSPACE/kodi-build" &&
          make -j$(getconf _NPROCESSORS_ONLN)
      - name: Package
        run:
          cd "$GITHUB_WORKSPACE/kodi-build" &&
          make apk
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          path: xbmc/kodiapp-armeabi-v7a-debug.apk
